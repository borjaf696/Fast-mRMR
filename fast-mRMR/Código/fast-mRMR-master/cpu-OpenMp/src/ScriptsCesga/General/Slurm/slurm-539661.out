gcc/5.3.0 loaded
boost/1.61.0 loaded
openmpi/1.10.2 loaded
rm *.o
rm ../../plibOp4/*.o
rm fast-mrmr
clear
[3J[H[2Jmpicxx -c -m64 -O3 -Wall  -I../../include/   -I/usr/include/boost/ -fopenmp mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp -o mainOpenMpMPI-V1-Block-Funcional0.3.2.o
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp: En la funci√≥n ‚Äòint main(int, char**)‚Äô:
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:150:15: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
     if ( diff > mpi_rank) {
               ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:161:32: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
     int sumaInteres = (proceso > diff) ? diff:proceso;
                                ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:162:53: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
     while (proceso*sizePerProcessGlobal+sumaInteres > claseStudy) {
                                                     ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:164:32: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
         sumaInteres = (proceso > diff) ? diff:proceso;
                                ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:173:28: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
         for (uint i = 0; i < dataSizes; i++)
                            ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:193:33: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
     for (int j = dataSizes+2; j < (dataSizes+2+sizeof(double)*tamanho); j+=8) {
                                 ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:238:27: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
     if ((lastFeatureIndex > startPoint) & (lastFeatureIndex < (startPoint+sizePerProcess)))
                           ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:245:28: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
     sumaInteres = (proceso > diff) ? diff:proceso;
                            ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:246:53: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
     while (proceso*sizePerProcessGlobal+sumaInteres > claseStudy) {
                                                     ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:248:32: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
         sumaInteres = (proceso > diff) ? diff:proceso;
                                ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:255:28: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
         for (uint i = 0; i < dataSizes; i++)
                            ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:274:33: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
     for (int j = dataSizes+2; j < (dataSizes+2+sizeof(double)*tamanho); j+=8) {
                                 ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:335:31: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
         if ((lastFeatureIndex > startPoint) & (lastFeatureIndex < (startPoint+sizePerProcess)))
                               ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:342:32: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
         sumaInteres = (proceso > diff) ? diff:proceso;
                                ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:343:57: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
         while (proceso*sizePerProcessGlobal+sumaInteres > claseStudy) {
                                                         ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:345:36: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
             sumaInteres = (proceso > diff) ? diff:proceso;
                                    ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:352:32: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
             for (uint i = 0; i < dataSizes; i++)
                                ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:371:37: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
         for (int j = dataSizes+2; j < (dataSizes+2+sizeof(double)*tamanho); j+=8) {
                                     ^
mainOpenMpMPI-V1-Block-Funcional0.3.2.cpp:208:9: aviso: variable ‚Äòiterator‚Äô sin usar [-Wunused-variable]
     int iterator = 0;
         ^
mpicxx -c -m64 -O3 -Wall  -I../../include/   -I/usr/include/boost/ -fopenmp ../../plibOp4/Histogram.cpp -o ../../plibOp4/Histogram.o
mpicxx -c -m64 -O3 -Wall  -I../../include/   -I/usr/include/boost/ -fopenmp ../../plibOp4/JointProb.cpp -o ../../plibOp4/JointProb.o
../../plibOp4/JointProb.cpp: En el constructor ‚ÄòJointProb::JointProb(RawData&, t_feature, uint)‚Äô:
../../plibOp4/JointProb.cpp:42:20: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
  for (int i = 0; i < datasize;i++)
                    ^
mpicxx -c -m64 -O3 -Wall  -I../../include/   -I/usr/include/boost/ -fopenmp ../../plibOp4/MutualInfo.cpp -o ../../plibOp4/MutualInfo.o
mpicxx -c -m64 -O3 -Wall  -I../../include/   -I/usr/include/boost/ -fopenmp ../../plibOp4/ProbTable.cpp -o ../../plibOp4/ProbTable.o
mpicxx -c -m64 -O3 -Wall  -I../../include/   -I/usr/include/boost/ -fopenmp ../../plibOp4/RawData.cpp -o ../../plibOp4/RawData.o
../../plibOp4/RawData.cpp: En la funci√≥n miembro ‚Äòvoid RawData::calculateDSandFS()‚Äô:
../../plibOp4/RawData.cpp:78:12: aviso: comparaci√≥n entre expresiones enteras signed y unsigned [-Wsign-compare]
  if ( diff > mpiNum) {
            ^
mpicxx mainOpenMpMPI-V1-Block-Funcional0.3.2.o ../../plibOp4/Histogram.o ../../plibOp4/JointProb.o ../../plibOp4/MutualInfo.o ../../plibOp4/ProbTable.o ../../plibOp4/RawData.o  -lboost_thread -L/usr/lib64/ -lboost_thread -fopenmp -o fast-mrmr
